{"cells":[{"cell_type":"markdown","source":["> GBM, XGBM, LGBM, CatBoost 모델에 따라 적절한 Parameter setting 값이  다를 수 있음"],"metadata":{"id":"ldSB8BBs0a6I"},"id":"ldSB8BBs0a6I"},{"cell_type":"code","execution_count":1,"id":"regional-value","metadata":{"id":"regional-value","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1656495542678,"user_tz":-540,"elapsed":16535,"user":{"displayName":"‍변윤선[ 대학원석·박사통합과정수료연구(재학) / 산업경영공학과 ]","userId":"10318325979670208769"}},"outputId":"7436a48e-8288-4cdc-ab88-0494626d7b5a"},"outputs":[{"output_type":"stream","name":"stdout","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Collecting catboost\n","  Downloading catboost-1.0.6-cp37-none-manylinux1_x86_64.whl (76.6 MB)\n","\u001b[K     |████████████████████████████████| 76.6 MB 75 kB/s \n","\u001b[?25hRequirement already satisfied: pandas>=0.24.0 in /usr/local/lib/python3.7/dist-packages (from catboost) (1.3.5)\n","Requirement already satisfied: matplotlib in /usr/local/lib/python3.7/dist-packages (from catboost) (3.2.2)\n","Requirement already satisfied: graphviz in /usr/local/lib/python3.7/dist-packages (from catboost) (0.10.1)\n","Requirement already satisfied: numpy>=1.16.0 in /usr/local/lib/python3.7/dist-packages (from catboost) (1.21.6)\n","Requirement already satisfied: six in /usr/local/lib/python3.7/dist-packages (from catboost) (1.15.0)\n","Requirement already satisfied: scipy in /usr/local/lib/python3.7/dist-packages (from catboost) (1.4.1)\n","Requirement already satisfied: plotly in /usr/local/lib/python3.7/dist-packages (from catboost) (5.5.0)\n","Requirement already satisfied: python-dateutil>=2.7.3 in /usr/local/lib/python3.7/dist-packages (from pandas>=0.24.0->catboost) (2.8.2)\n","Requirement already satisfied: pytz>=2017.3 in /usr/local/lib/python3.7/dist-packages (from pandas>=0.24.0->catboost) (2022.1)\n","Requirement already satisfied: pyparsing!=2.0.4,!=2.1.2,!=2.1.6,>=2.0.1 in /usr/local/lib/python3.7/dist-packages (from matplotlib->catboost) (3.0.9)\n","Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.7/dist-packages (from matplotlib->catboost) (0.11.0)\n","Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.7/dist-packages (from matplotlib->catboost) (1.4.3)\n","Requirement already satisfied: typing-extensions in /usr/local/lib/python3.7/dist-packages (from kiwisolver>=1.0.1->matplotlib->catboost) (4.1.1)\n","Requirement already satisfied: tenacity>=6.2.0 in /usr/local/lib/python3.7/dist-packages (from plotly->catboost) (8.0.1)\n","Installing collected packages: catboost\n","Successfully installed catboost-1.0.6\n"]}],"source":["'''\n","CatBoost package 설치\n","'''\n","!pip install catboost"]},{"cell_type":"code","source":["from sklearn.ensemble import GradientBoostingClassifier\n","from sklearn.linear_model import LogisticRegression\n","from lightgbm import LGBMClassifier\n","from xgboost import XGBClassifier\n","from catboost import CatBoostClassifier\n","from sklearn.model_selection import GridSearchCV\n","\n","import pandas as pd\n","import numpy as np"],"metadata":{"id":"hTWrcCpl0T6t","executionInfo":{"status":"ok","timestamp":1656495798342,"user_tz":-540,"elapsed":290,"user":{"displayName":"‍변윤선[ 대학원석·박사통합과정수료연구(재학) / 산업경영공학과 ]","userId":"10318325979670208769"}}},"id":"hTWrcCpl0T6t","execution_count":9,"outputs":[]},{"cell_type":"code","source":["!git clone https://github.com/yun-seon/DX-Training-LGES-0630.git"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"OuKeAAvHobB0","executionInfo":{"status":"ok","timestamp":1656495671808,"user_tz":-540,"elapsed":4307,"user":{"displayName":"‍변윤선[ 대학원석·박사통합과정수료연구(재학) / 산업경영공학과 ]","userId":"10318325979670208769"}},"outputId":"ed7313e6-f73e-46d3-aaf0-357535c39805"},"id":"OuKeAAvHobB0","execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["Cloning into 'DX-Training-LGES-0630'...\n","remote: Enumerating objects: 99, done.\u001b[K\n","remote: Counting objects: 100% (31/31), done.\u001b[K\n","remote: Compressing objects: 100% (31/31), done.\u001b[K\n","remote: Total 99 (delta 11), reused 0 (delta 0), pack-reused 68\u001b[K\n","Unpacking objects: 100% (99/99), done.\n"]}]},{"cell_type":"code","source":["# import dataset\n","\n","data = pd.read_csv('/content/DX-Training-LGES-0630/Data/Data_wafer_sensor_classification.csv')\n","\n","del data['Unnamed: 0']\n","data.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":236},"id":"WPUG41ghocZ0","executionInfo":{"status":"ok","timestamp":1656495731373,"user_tz":-540,"elapsed":825,"user":{"displayName":"‍변윤선[ 대학원석·박사통합과정수료연구(재학) / 산업경영공학과 ]","userId":"10318325979670208769"}},"outputId":"1b9030f6-c860-4add-da74-47ce266e5e28"},"id":"WPUG41ghocZ0","execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     0    1    2    3    4    5    6    7    8    9  ...    711           712  \\\n","0  2.0  2.0  2.0  2.0  2.0  2.0  2.0  2.0  2.0  2.0  ...  -97.0  9.436896e-16   \n","1  2.0  2.0  2.0  2.0  2.0  2.0  2.0  2.0  2.0  2.0  ...  -96.0 -9.600000e+01   \n","2  2.0  2.0  2.0  2.0  2.0  2.0  2.0  2.0  2.0  2.0  ...  -97.0 -3.774758e-15   \n","3  3.0  3.0  3.0  3.0  3.0  3.0  3.0  3.0  3.0  3.0  ... -116.0 -1.160000e+02   \n","4  2.0  3.0  3.0  3.0  2.0  2.0  2.0  2.0  2.0  2.0  ... -115.0 -1.150000e+02   \n","\n","     713           714           715           716           717  \\\n","0    0.0 -1.000000e+00  6.505213e-18  1.517883e-18 -2.710505e-20   \n","1   -6.0  6.938894e-17  5.551115e-17 -1.000000e+00 -1.734723e-18   \n","2   -1.0 -1.000000e+00 -1.000000e+00 -1.000000e+00 -1.000000e+00   \n","3 -116.0 -1.160000e+02 -1.160000e+02 -2.000000e+00 -1.000000e+00   \n","4 -115.0 -1.150000e+02 -1.150000e+02 -1.150000e+02 -1.150000e+02   \n","\n","            718           719  y  \n","0  0.000000e+00  0.000000e+00  0  \n","1 -2.059984e-18  1.084202e-19  0  \n","2  5.551115e-17 -1.000000e+00  0  \n","3  1.387779e-17 -3.469447e-18  0  \n","4 -1.150000e+02 -1.150000e+02  0  \n","\n","[5 rows x 721 columns]"],"text/html":["\n","  <div id=\"df-3bd5e85c-a29e-4e42-9517-57ff2517ef60\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","      <th>1</th>\n","      <th>2</th>\n","      <th>3</th>\n","      <th>4</th>\n","      <th>5</th>\n","      <th>6</th>\n","      <th>7</th>\n","      <th>8</th>\n","      <th>9</th>\n","      <th>...</th>\n","      <th>711</th>\n","      <th>712</th>\n","      <th>713</th>\n","      <th>714</th>\n","      <th>715</th>\n","      <th>716</th>\n","      <th>717</th>\n","      <th>718</th>\n","      <th>719</th>\n","      <th>y</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2.0</td>\n","      <td>2.0</td>\n","      <td>2.0</td>\n","      <td>2.0</td>\n","      <td>2.0</td>\n","      <td>2.0</td>\n","      <td>2.0</td>\n","      <td>2.0</td>\n","      <td>2.0</td>\n","      <td>2.0</td>\n","      <td>...</td>\n","      <td>-97.0</td>\n","      <td>9.436896e-16</td>\n","      <td>0.0</td>\n","      <td>-1.000000e+00</td>\n","      <td>6.505213e-18</td>\n","      <td>1.517883e-18</td>\n","      <td>-2.710505e-20</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2.0</td>\n","      <td>2.0</td>\n","      <td>2.0</td>\n","      <td>2.0</td>\n","      <td>2.0</td>\n","      <td>2.0</td>\n","      <td>2.0</td>\n","      <td>2.0</td>\n","      <td>2.0</td>\n","      <td>2.0</td>\n","      <td>...</td>\n","      <td>-96.0</td>\n","      <td>-9.600000e+01</td>\n","      <td>-6.0</td>\n","      <td>6.938894e-17</td>\n","      <td>5.551115e-17</td>\n","      <td>-1.000000e+00</td>\n","      <td>-1.734723e-18</td>\n","      <td>-2.059984e-18</td>\n","      <td>1.084202e-19</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2.0</td>\n","      <td>2.0</td>\n","      <td>2.0</td>\n","      <td>2.0</td>\n","      <td>2.0</td>\n","      <td>2.0</td>\n","      <td>2.0</td>\n","      <td>2.0</td>\n","      <td>2.0</td>\n","      <td>2.0</td>\n","      <td>...</td>\n","      <td>-97.0</td>\n","      <td>-3.774758e-15</td>\n","      <td>-1.0</td>\n","      <td>-1.000000e+00</td>\n","      <td>-1.000000e+00</td>\n","      <td>-1.000000e+00</td>\n","      <td>-1.000000e+00</td>\n","      <td>5.551115e-17</td>\n","      <td>-1.000000e+00</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3.0</td>\n","      <td>3.0</td>\n","      <td>3.0</td>\n","      <td>3.0</td>\n","      <td>3.0</td>\n","      <td>3.0</td>\n","      <td>3.0</td>\n","      <td>3.0</td>\n","      <td>3.0</td>\n","      <td>3.0</td>\n","      <td>...</td>\n","      <td>-116.0</td>\n","      <td>-1.160000e+02</td>\n","      <td>-116.0</td>\n","      <td>-1.160000e+02</td>\n","      <td>-1.160000e+02</td>\n","      <td>-2.000000e+00</td>\n","      <td>-1.000000e+00</td>\n","      <td>1.387779e-17</td>\n","      <td>-3.469447e-18</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2.0</td>\n","      <td>3.0</td>\n","      <td>3.0</td>\n","      <td>3.0</td>\n","      <td>2.0</td>\n","      <td>2.0</td>\n","      <td>2.0</td>\n","      <td>2.0</td>\n","      <td>2.0</td>\n","      <td>2.0</td>\n","      <td>...</td>\n","      <td>-115.0</td>\n","      <td>-1.150000e+02</td>\n","      <td>-115.0</td>\n","      <td>-1.150000e+02</td>\n","      <td>-1.150000e+02</td>\n","      <td>-1.150000e+02</td>\n","      <td>-1.150000e+02</td>\n","      <td>-1.150000e+02</td>\n","      <td>-1.150000e+02</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 721 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3bd5e85c-a29e-4e42-9517-57ff2517ef60')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-3bd5e85c-a29e-4e42-9517-57ff2517ef60 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-3bd5e85c-a29e-4e42-9517-57ff2517ef60');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":6}]},{"cell_type":"code","execution_count":7,"id":"chicken-fruit","metadata":{"id":"chicken-fruit","executionInfo":{"status":"ok","timestamp":1656495741734,"user_tz":-540,"elapsed":477,"user":{"displayName":"‍변윤선[ 대학원석·박사통합과정수료연구(재학) / 산업경영공학과 ]","userId":"10318325979670208769"}}},"outputs":[],"source":["from sklearn.model_selection import train_test_split\n","\n","# split train and test data (test ratio: 30%)\n","X_train, X_test, Y_train, Y_test = train_test_split(data.iloc[:, 0:720], data.iloc[:,720], test_size = 0.3)"]},{"cell_type":"code","execution_count":8,"id":"peaceful-henry","metadata":{"id":"peaceful-henry","executionInfo":{"status":"ok","timestamp":1656495771055,"user_tz":-540,"elapsed":8,"user":{"displayName":"‍변윤선[ 대학원석·박사통합과정수료연구(재학) / 산업경영공학과 ]","userId":"10318325979670208769"}}},"outputs":[],"source":["# 성능 비교를 위한 Boosting 모델 정의\n","xgb = XGBClassifier()\n","lgb = LGBMClassifier()\n","gbm = GradientBoostingClassifier()\n","cat = CatBoostClassifier()\n","\n","lreg = LogisticRegression()"]},{"cell_type":"code","source":["# 최적의 파라미터 값 찾기 위한 범위 설정\n","# XGB\n","param_xgb = {\"max_depth\": [10,30,50],\n","              \"min_child_weight\" : [1,3,6,10],\n","              \"n_estimators\": [200,300,500,1000]\n","              }    \n","# LGB                        \n","param_lgb = {\"learning_rate\" : [0.01,0.1,0.2,0.3,0.4,0.5],\n","             \"max_depth\" : [25, 50, 75],\n","             \"num_leaves\" : [100,300,500,900,1200],\n","             \"n_estimators\" : [100, 200, 300,500,800,1000],\n","             \"learning_rate\" : [0.01,0.1,0.2,0.3,0.4,0.5]\n","              }\n","# GBM              \n","param_gbm = {\"max_depth\" : [4,5,6,7,8,9,10],\n","             \"learning_rate\" : [0.01,0.1,0.2,0.3,0.4,0.5],\n","             \"n_estimators\" : [100,200,300,500]\n","              }\n","# CAT\n","param_cat = {\"depth\" : [6,4,5,7,8,9,10],\n","          \"iterations\" : [250,100,500,1000],\n","          \"learning_rate\" : [0.001,0.01,0.1,0.2,0.3], \n","          \"l2_leaf_reg\" : [2,5,10,20,30],\n","          \"border_count\" : [254]\n","          }\n","\n","# Logistic\n","param_lreg = { 'C' : [1.0, 3, 5, 7, 10],\n","              'max_iter': [50, 200, 100, 300, 500,700, 800]\n","              }"],"metadata":{"id":"ks4jg2mX12E0","executionInfo":{"status":"ok","timestamp":1656495823721,"user_tz":-540,"elapsed":401,"user":{"displayName":"‍변윤선[ 대학원석·박사통합과정수료연구(재학) / 산업경영공학과 ]","userId":"10318325979670208769"}}},"id":"ks4jg2mX12E0","execution_count":10,"outputs":[]},{"cell_type":"code","source":["# 최적의 파라미터 찾기 위한 GridsearchCV 실행\n","# cv = StratifiedKFold(n_splits=5, shuffle = True, random_state=42)\n","gscv_xgb = GridSearchCV (estimator = xgb, param_grid = param_xgb, scoring ='accuracy', cv = 3, refit=True, n_jobs=1, verbose=2)\n","gscv_lgb = GridSearchCV (estimator = lgb, param_grid = param_lgb, scoring ='accuracy', cv = 3, refit=True, n_jobs=1, verbose=2)\n","gscv_gbm = GridSearchCV (estimator = gbm, param_grid = param_gbm, scoring ='accuracy', cv = 3, refit=True, n_jobs=1, verbose=2)\n","gscv_cat = GridSearchCV (estimator = cat, param_grid = param_cat, scoring ='accuracy', cv = 3, refit=True, n_jobs=1, verbose=2)\n","gscv_lreg = GridSearchCV (estimator = lreg, param_grid = param_lreg, scoring ='accuracy', cv = 3, refit=True, n_jobs=1, verbose=2)\n","gscv_xgb.fit(X_train, Y_train)\n","gscv_lgb.fit(X_train, Y_train)\n","gscv_gbm.fit(X_train, Y_train)\n","gscv_cat.fit(X_train, Y_train)\n","gscv_lreg.fit(X_train, Y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"yvhnmcF612Gn","outputId":"f74f0de9-6e38-42dd-bfe1-1fdc184a8470"},"id":"yvhnmcF612Gn","execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Fitting 3 folds for each of 48 candidates, totalling 144 fits\n","[CV] END .max_depth=10, min_child_weight=1, n_estimators=200; total time=   2.9s\n","[CV] END .max_depth=10, min_child_weight=1, n_estimators=200; total time=   2.4s\n","[CV] END .max_depth=10, min_child_weight=1, n_estimators=200; total time=   2.4s\n","[CV] END .max_depth=10, min_child_weight=1, n_estimators=300; total time=   2.9s\n","[CV] END .max_depth=10, min_child_weight=1, n_estimators=300; total time=   3.1s\n","[CV] END .max_depth=10, min_child_weight=1, n_estimators=300; total time=   3.2s\n","[CV] END .max_depth=10, min_child_weight=1, n_estimators=500; total time=   4.6s\n","[CV] END .max_depth=10, min_child_weight=1, n_estimators=500; total time=   4.5s\n","[CV] END .max_depth=10, min_child_weight=1, n_estimators=500; total time=   4.7s\n","[CV] END max_depth=10, min_child_weight=1, n_estimators=1000; total time=   6.3s\n","[CV] END max_depth=10, min_child_weight=1, n_estimators=1000; total time=   6.4s\n","[CV] END max_depth=10, min_child_weight=1, n_estimators=1000; total time=   6.6s\n","[CV] END .max_depth=10, min_child_weight=3, n_estimators=200; total time=   1.9s\n","[CV] END .max_depth=10, min_child_weight=3, n_estimators=200; total time=   2.1s\n","[CV] END .max_depth=10, min_child_weight=3, n_estimators=200; total time=   2.1s\n","[CV] END .max_depth=10, min_child_weight=3, n_estimators=300; total time=   2.4s\n","[CV] END .max_depth=10, min_child_weight=3, n_estimators=300; total time=   2.7s\n","[CV] END .max_depth=10, min_child_weight=3, n_estimators=300; total time=   2.7s\n","[CV] END .max_depth=10, min_child_weight=3, n_estimators=500; total time=   3.5s\n","[CV] END .max_depth=10, min_child_weight=3, n_estimators=500; total time=   4.0s\n","[CV] END .max_depth=10, min_child_weight=3, n_estimators=500; total time=   3.8s\n","[CV] END max_depth=10, min_child_weight=3, n_estimators=1000; total time=   5.9s\n","[CV] END max_depth=10, min_child_weight=3, n_estimators=1000; total time=   6.1s\n","[CV] END max_depth=10, min_child_weight=3, n_estimators=1000; total time=   6.1s\n","[CV] END .max_depth=10, min_child_weight=6, n_estimators=200; total time=   1.7s\n","[CV] END .max_depth=10, min_child_weight=6, n_estimators=200; total time=   2.3s\n","[CV] END .max_depth=10, min_child_weight=6, n_estimators=200; total time=   1.9s\n","[CV] END .max_depth=10, min_child_weight=6, n_estimators=300; total time=   2.3s\n","[CV] END .max_depth=10, min_child_weight=6, n_estimators=300; total time=   2.3s\n","[CV] END .max_depth=10, min_child_weight=6, n_estimators=300; total time=   2.4s\n","[CV] END .max_depth=10, min_child_weight=6, n_estimators=500; total time=   3.2s\n","[CV] END .max_depth=10, min_child_weight=6, n_estimators=500; total time=   3.3s\n","[CV] END .max_depth=10, min_child_weight=6, n_estimators=500; total time=   3.3s\n","[CV] END max_depth=10, min_child_weight=6, n_estimators=1000; total time=   5.6s\n","[CV] END max_depth=10, min_child_weight=6, n_estimators=1000; total time=   5.8s\n","[CV] END max_depth=10, min_child_weight=6, n_estimators=1000; total time=   5.8s\n","[CV] END max_depth=10, min_child_weight=10, n_estimators=200; total time=   1.3s\n","[CV] END max_depth=10, min_child_weight=10, n_estimators=200; total time=   1.4s\n","[CV] END max_depth=10, min_child_weight=10, n_estimators=200; total time=   1.5s\n","[CV] END max_depth=10, min_child_weight=10, n_estimators=300; total time=   1.8s\n","[CV] END max_depth=10, min_child_weight=10, n_estimators=300; total time=   1.9s\n","[CV] END max_depth=10, min_child_weight=10, n_estimators=300; total time=   2.0s\n","[CV] END max_depth=10, min_child_weight=10, n_estimators=500; total time=   2.8s\n","[CV] END max_depth=10, min_child_weight=10, n_estimators=500; total time=   2.9s\n","[CV] END max_depth=10, min_child_weight=10, n_estimators=500; total time=   3.0s\n","[CV] END max_depth=10, min_child_weight=10, n_estimators=1000; total time=   5.2s\n","[CV] END max_depth=10, min_child_weight=10, n_estimators=1000; total time=   5.2s\n","[CV] END max_depth=10, min_child_weight=10, n_estimators=1000; total time=   5.4s\n","[CV] END .max_depth=30, min_child_weight=1, n_estimators=200; total time=   2.2s\n","[CV] END .max_depth=30, min_child_weight=1, n_estimators=200; total time=   2.3s\n","[CV] END .max_depth=30, min_child_weight=1, n_estimators=200; total time=   2.4s\n","[CV] END .max_depth=30, min_child_weight=1, n_estimators=300; total time=   2.9s\n","[CV] END .max_depth=30, min_child_weight=1, n_estimators=300; total time=   3.1s\n","[CV] END .max_depth=30, min_child_weight=1, n_estimators=300; total time=   3.2s\n","[CV] END .max_depth=30, min_child_weight=1, n_estimators=500; total time=   3.8s\n","[CV] END .max_depth=30, min_child_weight=1, n_estimators=500; total time=   4.0s\n","[CV] END .max_depth=30, min_child_weight=1, n_estimators=500; total time=   4.2s\n","[CV] END max_depth=30, min_child_weight=1, n_estimators=1000; total time=   6.3s\n","[CV] END max_depth=30, min_child_weight=1, n_estimators=1000; total time=   6.4s\n","[CV] END max_depth=30, min_child_weight=1, n_estimators=1000; total time=   6.7s\n","[CV] END .max_depth=30, min_child_weight=3, n_estimators=200; total time=   1.9s\n","[CV] END .max_depth=30, min_child_weight=3, n_estimators=200; total time=   2.1s\n","[CV] END .max_depth=30, min_child_weight=3, n_estimators=200; total time=   2.1s\n","[CV] END .max_depth=30, min_child_weight=3, n_estimators=300; total time=   2.4s\n","[CV] END .max_depth=30, min_child_weight=3, n_estimators=300; total time=   2.7s\n","[CV] END .max_depth=30, min_child_weight=3, n_estimators=300; total time=   2.7s\n","[CV] END .max_depth=30, min_child_weight=3, n_estimators=500; total time=   3.5s\n","[CV] END .max_depth=30, min_child_weight=3, n_estimators=500; total time=   3.7s\n","[CV] END .max_depth=30, min_child_weight=3, n_estimators=500; total time=   3.8s\n","[CV] END max_depth=30, min_child_weight=3, n_estimators=1000; total time=   6.0s\n","[CV] END max_depth=30, min_child_weight=3, n_estimators=1000; total time=   6.3s\n","[CV] END max_depth=30, min_child_weight=3, n_estimators=1000; total time=   6.3s\n","[CV] END .max_depth=30, min_child_weight=6, n_estimators=200; total time=   1.8s\n","[CV] END .max_depth=30, min_child_weight=6, n_estimators=200; total time=   1.9s\n","[CV] END .max_depth=30, min_child_weight=6, n_estimators=200; total time=   2.0s\n","[CV] END .max_depth=30, min_child_weight=6, n_estimators=300; total time=   2.3s\n","[CV] END .max_depth=30, min_child_weight=6, n_estimators=300; total time=   2.4s\n","[CV] END .max_depth=30, min_child_weight=6, n_estimators=300; total time=   2.4s\n","[CV] END .max_depth=30, min_child_weight=6, n_estimators=500; total time=   3.8s\n","[CV] END .max_depth=30, min_child_weight=6, n_estimators=500; total time=   3.5s\n","[CV] END .max_depth=30, min_child_weight=6, n_estimators=500; total time=   3.4s\n","[CV] END max_depth=30, min_child_weight=6, n_estimators=1000; total time=   5.8s\n","[CV] END max_depth=30, min_child_weight=6, n_estimators=1000; total time=   5.9s\n","[CV] END max_depth=30, min_child_weight=6, n_estimators=1000; total time=   5.8s\n","[CV] END max_depth=30, min_child_weight=10, n_estimators=200; total time=   1.4s\n","[CV] END max_depth=30, min_child_weight=10, n_estimators=200; total time=   1.4s\n","[CV] END max_depth=30, min_child_weight=10, n_estimators=200; total time=   1.6s\n","[CV] END max_depth=30, min_child_weight=10, n_estimators=300; total time=   1.9s\n","[CV] END max_depth=30, min_child_weight=10, n_estimators=300; total time=   2.0s\n","[CV] END max_depth=30, min_child_weight=10, n_estimators=300; total time=   2.1s\n","[CV] END max_depth=30, min_child_weight=10, n_estimators=500; total time=   2.8s\n","[CV] END max_depth=30, min_child_weight=10, n_estimators=500; total time=   2.9s\n","[CV] END max_depth=30, min_child_weight=10, n_estimators=500; total time=   3.0s\n","[CV] END max_depth=30, min_child_weight=10, n_estimators=1000; total time=   5.5s\n","[CV] END max_depth=30, min_child_weight=10, n_estimators=1000; total time=   5.4s\n","[CV] END max_depth=30, min_child_weight=10, n_estimators=1000; total time=   5.6s\n","[CV] END .max_depth=50, min_child_weight=1, n_estimators=200; total time=   2.3s\n","[CV] END .max_depth=50, min_child_weight=1, n_estimators=200; total time=   2.5s\n","[CV] END .max_depth=50, min_child_weight=1, n_estimators=200; total time=   2.4s\n","[CV] END .max_depth=50, min_child_weight=1, n_estimators=300; total time=   2.9s\n","[CV] END .max_depth=50, min_child_weight=1, n_estimators=300; total time=   3.2s\n","[CV] END .max_depth=50, min_child_weight=1, n_estimators=300; total time=   3.2s\n","[CV] END .max_depth=50, min_child_weight=1, n_estimators=500; total time=   3.9s\n","[CV] END .max_depth=50, min_child_weight=1, n_estimators=500; total time=   4.1s\n","[CV] END .max_depth=50, min_child_weight=1, n_estimators=500; total time=   4.2s\n","[CV] END max_depth=50, min_child_weight=1, n_estimators=1000; total time=   6.3s\n","[CV] END max_depth=50, min_child_weight=1, n_estimators=1000; total time=   6.5s\n","[CV] END max_depth=50, min_child_weight=1, n_estimators=1000; total time=   6.7s\n","[CV] END .max_depth=50, min_child_weight=3, n_estimators=200; total time=   2.0s\n","[CV] END .max_depth=50, min_child_weight=3, n_estimators=200; total time=   2.1s\n","[CV] END .max_depth=50, min_child_weight=3, n_estimators=200; total time=   2.0s\n","[CV] END .max_depth=50, min_child_weight=3, n_estimators=300; total time=   2.5s\n","[CV] END .max_depth=50, min_child_weight=3, n_estimators=300; total time=   2.7s\n","[CV] END .max_depth=50, min_child_weight=3, n_estimators=300; total time=   2.7s\n","[CV] END .max_depth=50, min_child_weight=3, n_estimators=500; total time=   3.5s\n","[CV] END .max_depth=50, min_child_weight=3, n_estimators=500; total time=   3.6s\n","[CV] END .max_depth=50, min_child_weight=3, n_estimators=500; total time=   3.7s\n","[CV] END max_depth=50, min_child_weight=3, n_estimators=1000; total time=   5.9s\n","[CV] END max_depth=50, min_child_weight=3, n_estimators=1000; total time=   6.1s\n","[CV] END max_depth=50, min_child_weight=3, n_estimators=1000; total time=   6.2s\n","[CV] END .max_depth=50, min_child_weight=6, n_estimators=200; total time=   1.8s\n","[CV] END .max_depth=50, min_child_weight=6, n_estimators=200; total time=   1.9s\n","[CV] END .max_depth=50, min_child_weight=6, n_estimators=200; total time=   1.9s\n","[CV] END .max_depth=50, min_child_weight=6, n_estimators=300; total time=   2.2s\n","[CV] END .max_depth=50, min_child_weight=6, n_estimators=300; total time=   2.3s\n","[CV] END .max_depth=50, min_child_weight=6, n_estimators=300; total time=   2.4s\n","[CV] END .max_depth=50, min_child_weight=6, n_estimators=500; total time=   3.2s\n","[CV] END .max_depth=50, min_child_weight=6, n_estimators=500; total time=   3.3s\n","[CV] END .max_depth=50, min_child_weight=6, n_estimators=500; total time=   3.3s\n","[CV] END max_depth=50, min_child_weight=6, n_estimators=1000; total time=   5.7s\n","[CV] END max_depth=50, min_child_weight=6, n_estimators=1000; total time=   5.8s\n","[CV] END max_depth=50, min_child_weight=6, n_estimators=1000; total time=   5.9s\n","[CV] END max_depth=50, min_child_weight=10, n_estimators=200; total time=   1.4s\n","[CV] END max_depth=50, min_child_weight=10, n_estimators=200; total time=   1.4s\n","[CV] END max_depth=50, min_child_weight=10, n_estimators=200; total time=   1.6s\n","[CV] END max_depth=50, min_child_weight=10, n_estimators=300; total time=   2.7s\n","[CV] END max_depth=50, min_child_weight=10, n_estimators=300; total time=   3.3s\n","[CV] END max_depth=50, min_child_weight=10, n_estimators=300; total time=   3.1s\n","[CV] END max_depth=50, min_child_weight=10, n_estimators=500; total time=   3.4s\n","[CV] END max_depth=50, min_child_weight=10, n_estimators=500; total time=   2.8s\n","[CV] END max_depth=50, min_child_weight=10, n_estimators=500; total time=   3.0s\n","[CV] END max_depth=50, min_child_weight=10, n_estimators=1000; total time=   5.3s\n","[CV] END max_depth=50, min_child_weight=10, n_estimators=1000; total time=   5.3s\n","[CV] END max_depth=50, min_child_weight=10, n_estimators=1000; total time=   5.5s\n","Fitting 3 folds for each of 540 candidates, totalling 1620 fits\n","[CV] END learning_rate=0.01, max_depth=25, n_estimators=100, num_leaves=100; total time=   2.0s\n","[CV] END learning_rate=0.01, max_depth=25, n_estimators=100, num_leaves=100; total time=   1.7s\n","[CV] END learning_rate=0.01, max_depth=25, n_estimators=100, num_leaves=100; total time=   1.8s\n","[CV] END learning_rate=0.01, max_depth=25, n_estimators=100, num_leaves=300; total time=   2.0s\n","[CV] END learning_rate=0.01, max_depth=25, n_estimators=100, num_leaves=300; total time=   1.7s\n","[CV] END learning_rate=0.01, max_depth=25, n_estimators=100, num_leaves=300; total time=   1.8s\n","[CV] END learning_rate=0.01, max_depth=25, n_estimators=100, num_leaves=500; total time=   2.1s\n","[CV] END learning_rate=0.01, max_depth=25, n_estimators=100, num_leaves=500; total time=   2.0s\n","[CV] END learning_rate=0.01, max_depth=25, n_estimators=100, num_leaves=500; total time=   1.9s\n","[CV] END learning_rate=0.01, max_depth=25, n_estimators=100, num_leaves=900; total time=   2.5s\n","[CV] END learning_rate=0.01, max_depth=25, n_estimators=100, num_leaves=900; total time=   2.2s\n","[CV] END learning_rate=0.01, max_depth=25, n_estimators=100, num_leaves=900; total time=   2.2s\n","[CV] END learning_rate=0.01, max_depth=25, n_estimators=100, num_leaves=1200; total time=   2.4s\n","[CV] END learning_rate=0.01, max_depth=25, n_estimators=100, num_leaves=1200; total time=   2.3s\n","[CV] END learning_rate=0.01, max_depth=25, n_estimators=100, num_leaves=1200; total time=   2.3s\n","[CV] END learning_rate=0.01, max_depth=25, n_estimators=200, num_leaves=100; total time=   3.7s\n","[CV] END learning_rate=0.01, max_depth=25, n_estimators=200, num_leaves=100; total time=   3.9s\n","[CV] END learning_rate=0.01, max_depth=25, n_estimators=200, num_leaves=100; total time=   3.6s\n","[CV] END learning_rate=0.01, max_depth=25, n_estimators=200, num_leaves=300; total time=   3.8s\n","[CV] END learning_rate=0.01, max_depth=25, n_estimators=200, num_leaves=300; total time=   4.0s\n","[CV] END learning_rate=0.01, max_depth=25, n_estimators=200, num_leaves=300; total time=   3.8s\n","[CV] END learning_rate=0.01, max_depth=25, n_estimators=200, num_leaves=500; total time=   4.0s\n","[CV] END learning_rate=0.01, max_depth=25, n_estimators=200, num_leaves=500; total time=   4.0s\n","[CV] END learning_rate=0.01, max_depth=25, n_estimators=200, num_leaves=500; total time=   4.7s\n","[CV] END learning_rate=0.01, max_depth=25, n_estimators=200, num_leaves=900; total time=   4.0s\n","[CV] END learning_rate=0.01, max_depth=25, n_estimators=200, num_leaves=900; total time=   4.3s\n","[CV] END learning_rate=0.01, max_depth=25, n_estimators=200, num_leaves=900; total time=   5.1s\n","[CV] END learning_rate=0.01, max_depth=25, n_estimators=200, num_leaves=1200; total time=  10.1s\n","[CV] END learning_rate=0.01, max_depth=25, n_estimators=200, num_leaves=1200; total time=   5.0s\n","[CV] END learning_rate=0.01, max_depth=25, n_estimators=200, num_leaves=1200; total time=   4.2s\n","[CV] END learning_rate=0.01, max_depth=25, n_estimators=300, num_leaves=100; total time=   6.4s\n","[CV] END learning_rate=0.01, max_depth=25, n_estimators=300, num_leaves=100; total time=   5.8s\n","[CV] END learning_rate=0.01, max_depth=25, n_estimators=300, num_leaves=100; total time=   5.7s\n","[CV] END learning_rate=0.01, max_depth=25, n_estimators=300, num_leaves=300; total time=   5.7s\n","[CV] END learning_rate=0.01, max_depth=25, n_estimators=300, num_leaves=300; total time=   6.2s\n","[CV] END learning_rate=0.01, max_depth=25, n_estimators=300, num_leaves=300; total time=   5.9s\n","[CV] END learning_rate=0.01, max_depth=25, n_estimators=300, num_leaves=500; total time=   5.9s\n","[CV] END learning_rate=0.01, max_depth=25, n_estimators=300, num_leaves=500; total time=   6.0s\n","[CV] END learning_rate=0.01, max_depth=25, n_estimators=300, num_leaves=500; total time=   5.7s\n","[CV] END learning_rate=0.01, max_depth=25, n_estimators=300, num_leaves=900; total time=   6.1s\n","[CV] END learning_rate=0.01, max_depth=25, n_estimators=300, num_leaves=900; total time=   6.0s\n","[CV] END learning_rate=0.01, max_depth=25, n_estimators=300, num_leaves=900; total time=   5.8s\n"]}]},{"cell_type":"code","source":["print(\"=\"*30)\n","print('XGB 파라미터: ', gscv_xgb.best_params_)\n","print('XGB 예측 정확도: {:.4f}'.format(gscv_xgb.best_score_))\n","\n","print(\"=\"*30)\n","print('LGB 파라미터: ', gscv_lgb.best_params_)\n","print('LGB 예측 정확도: {:.4f}'.format(gscv_lgb.best_score_))\n","\n","print(\"=\"*30)\n","print('GBM 파라미터: ', gscv_gbm.best_params_)\n","print('GBM 예측 정확도: {:.4f}'.format(gscv_gbm.best_score_))\n","\n","print(\"=\"*30)\n","print('CAT 파라미터: ', gscv_cat.best_params_)\n","print('CAT 예측 정확도: {:.4f}'.format(gscv_cat.best_score_))\n","\n","print(\"=\"*30)\n","print('Lreg 파라미터: ', gscv_lreg.best_params_)\n","print('Lreg 예측 정확도: {:.4f}'.format(gscv_lreg.best_score_))\n","print(\"=\"*30)"],"metadata":{"id":"fku87HJY12H_"},"id":"fku87HJY12H_","execution_count":null,"outputs":[]},{"cell_type":"code","source":[""],"metadata":{"id":"PZeQwsJD12Js"},"id":"PZeQwsJD12Js","execution_count":null,"outputs":[]},{"cell_type":"code","source":[""],"metadata":{"id":"yv4G5gdc12LQ"},"id":"yv4G5gdc12LQ","execution_count":null,"outputs":[]},{"cell_type":"code","execution_count":null,"id":"golden-deficit","metadata":{"id":"golden-deficit"},"outputs":[],"source":[""]}],"metadata":{"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.7.10"},"colab":{"name":"05-Model_Hyper-parameter_Tuning(Boosting)","provenance":[],"collapsed_sections":[]}},"nbformat":4,"nbformat_minor":5}